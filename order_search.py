import pandas as pd
import re


def main():
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel-—Ñ–∞–π–ª–∞
        df = pd.read_excel('–†–ê–°–ö–†–û–ô 2025.xlsx')

        # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
        order_number = input("üîç –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ").strip()

        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞
        row = df[df['‚Ññ –ó–∞–∫–∞–∑–∞'].astype(str) == order_number]

        if not row.empty:
            # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –ø–æ–¥—Ö–æ–¥—è—â—É—é –∑–∞–ø–∏—Å—å
            found_row = row.iloc[0]

            # –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
            store_application_number = found_row['‚Ññ –º–∞–≥–∞–∑–∏–Ω–∞ / –∑–∞—è–≤–∫–∞']
            client = found_row['–ö–ª–∏–µ–Ω—Ç']
            full_name = found_row['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']

            # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–∑–¥–µ–ª–∏—è
            match = re.match(r'(.*?)(?:\s*)(\d+)[x—Ö–•–•*√ó](\d+)[x—Ö–•–•*√ó](\d+)', full_name)

            if match:
                item_name = match.group(1).strip()  # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è
                width = int(match.group(2))  # –®–∏—Ä–∏–Ω–∞
                height = int(match.group(3))  # –í—ã—Å–æ—Ç–∞
                depth = int(match.group(4))  # –ì–ª—É–±–∏–Ω–∞
            else:
                item_name = full_name
                width = height = depth = None

            carcase_value = found_row['–ö–æ—Ä–ø—É—Å']

            # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            parts = carcase_value.split('/')

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
            unique_words = set()

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
            for part in parts:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏ –¥–æ –ø–µ—Ä–≤—ã—Ö —Ü–∏—Ñ—Ä —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
                match = re.match(r'^\D+', part.strip())
                if match:
                    word = match.group().strip()
                    unique_words.add(word)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
            carcase = '/'.join(unique_words)

            extra_component = found_row['–ü—Ä–æ—Ñ–∏–ª—å /            –î–æ–ø. –≠–ª–µ–º–µ–Ω—Ç—ã']

            if extra_component == '' or extra_component == '-':
                extra_component = None




            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
            print("\n‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑:")
            print(f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_number}")
            print(f"–ú–∞–≥–∞–∑–∏–Ω / –∑–∞—è–≤–∫–∞: {store_application_number}")
            print(f"–ö–ª–∏–µ–Ω—Ç: {client}")
            print(f"–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: {full_name}")
            print(f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: {item_name}")
            print(f"–®–∏—Ä–∏–Ω–∞: {width or '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}")
            print(f"–í—ã—Å–æ—Ç–∞: {height or '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}")
            print(f"–ì–ª—É–±–∏–Ω–∞: {depth or '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}")
            print(f"–ö–æ—Ä–ø—É—Å: {carcase}")
            print(f'–î–æ–ø. –≠–ª–µ–º–µ–Ω—Ç: {extra_component}')
        else:
            print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")


if __name__ == "__main__":
    main()
